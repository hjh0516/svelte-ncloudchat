"use strict";

var _interopRequireDefault = require("@babel/runtime-corejs2/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs2/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.getMemberBlocks = void 0;

var _stringify = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/json/stringify"));

var _iterator = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/symbol/iterator"));

var _symbol = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/symbol"));

var _promise = _interopRequireDefault(require("@babel/runtime-corejs2/core-js/promise"));

var _CoreManager = _interopRequireDefault(require("../CoreManager"));

var __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = _promise["default"]))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};

var __generator = void 0 && (void 0).__generator || function (thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1) throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  },
      f,
      y,
      t,
      g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof _symbol["default"] === "function" && (g[_iterator["default"]] = function () {
    return this;
  }), g;

  function verb(n) {
    return function (v) {
      return step([n, v]);
    };
  }

  function step(op) {
    if (f) throw new TypeError("Generator is already executing.");

    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }

    if (op[0] & 5) throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};

var getMemberBlocks = function getMemberBlocks(filter, sort, option) {
  return __awaiter(void 0, void 0, void 0, function () {
    var token, projectId, endpoint, lquery;
    return __generator(this, function (_a) {
      switch (_a.label) {
        case 0:
          token = _CoreManager["default"].get('TOKEN');
          if (!token) return [2
          /*return*/
          , null];
          projectId = _CoreManager["default"].get('PROJECT_ID');
          if (!projectId) return [2
          /*return*/
          , null];
          endpoint = _CoreManager["default"].get('SERVER_URL') + '/graphql';
          lquery = "\n  query memberblocks ($projectId: String!, $filter: String!, $sort: String, $option:String) {\n    memberblocks(projectId: $projectId, filter:$filter, sort:$sort, option:$option) {\n        totalCount\n      edges {\n        node {\n          id\n          project_id\n          member_id\n          type\n          status\n          block_type\n          messageMulti {\n            lang\n            value\n            default\n          }\n          started_at\n          ended_at\n          created_at\n          updated_at\n          deleted_at\n        }\n      }\n    }\n  }\n   \n  ";
          return [4
          /*yield*/
          , fetch(endpoint, {
            method: 'POST',
            headers: {
              Authorization: 'Bearer ' + token,
              'X-PROJECT-ID': projectId,
              'Content-Type': 'application/json',
              Accept: 'application/json'
            },
            body: (0, _stringify["default"])({
              query: lquery,
              variables: {
                projectId: projectId,
                filter: filter,
                sort: sort,
                option: option
              }
            })
          }).then(function (res) {
            return res.json();
          }).then(function (data) {
            if (data.errors) throw data.errors[0];
            if (data.code) throw data;

            if (data.data.memberblocks) {
              return data.data.memberblocks.edges;
            }

            return [];
          })];

        case 1:
          return [2
          /*return*/
          , _a.sent()];
      }
    });
  });
};

exports.getMemberBlocks = getMemberBlocks;